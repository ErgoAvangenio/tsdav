import{fetch as e}from"cross-fetch";import t from"debug";import r from"xml-js";import{encode as a}from"base-64";var s;!function(e){e.CALENDAR_SERVER="http://calendarserver.org/ns/",e.CALDAV_APPLE="http://apple.com/ns/ical/",e.CALDAV="urn:ietf:params:xml:ns:caldav",e.CARDDAV="urn:ietf:params:xml:ns:carddav",e.DAV="DAV:",e.OWN_CLOUD="http://owncloud.org/ns"}(s||(s={}));const o={[s.CALDAV]:"xmlns:c",[s.CARDDAV]:"xmlns:card",[s.CALENDAR_SERVER]:"xmlns:cs",[s.CALDAV_APPLE]:"xmlns:ca",[s.DAV]:"xmlns:d",[s.OWN_CLOUD]:"xmlns:oc"};var n,c;!function(e){e.CALDAV="c",e.CARDDAV="card",e.CALENDAR_SERVER="cs",e.CALDAV_APPLE="ca",e.DAV="d",e.OWN_CLOUD="oc"}(n||(n={})),function(e){e.VEVENT="VEVENT",e.VTODO="VTODO",e.VJOURNAL="VJOURNAL",e.VFREEBUSY="VFREEBUSY",e.VTIMEZONE="VTIMEZONE",e.VALARM="VALARM"}(c||(c={}));const d=e=>{const t=Number(e);if(!Number.isNaN(t))return t;const r=e.toLowerCase();return"true"===r||"false"!==r&&e},i=(e,t)=>{if(!e&&!t)return!0;if(!e||!t)return!1;const r=e.trim(),a=t.trim();if(Math.abs(r.length-a.length)>1)return!1;const s="/"===r.slice(-1)?r.slice(0,-1):r,o="/"===a.slice(-1)?a.slice(0,-1):a;return e.includes(o)||t.includes(s)},l=(e,t)=>{if(!e&&!t)return!0;if(!e||!t)return!1;const r=e.trim(),a=t.trim(),s="/"===r.slice(-1)?r.slice(0,-1):r,o="/"===a.slice(-1)?a.slice(0,-1):a;return e.includes(o)||t.includes(s)},u=e=>e.reduce(((e,t)=>({...e,[o[t]]:t})),{}),h=e=>Object.entries(e).reduce(((e,[t,r])=>r?{...e,[t]:r}:e),{}),p=(e,t)=>t?{[e]:t}:{},f=(e,t)=>e?t&&0!==t.length?Object.fromEntries(Object.entries(e).filter((([e])=>!t.includes(e)))):e:{};var v=Object.freeze({__proto__:null,cleanupFalsy:h,conditionalParam:p,excludeHeaders:f,getDAVAttribute:u,urlContains:l,urlEquals:i});const O=t("tsdav:request"),y=async t=>{var a;const{url:s,init:o,convertIncoming:n=!0,parseOutgoing:c=!0,fetchOptions:i={}}=t,{headers:l={},body:u,namespace:p,method:f,attributes:v}=o,y=n?r.js2xml({_declaration:{_attributes:{version:"1.0",encoding:"utf-8"}},...u,_attributes:v},{compact:!0,spaces:2,elementNameFn:e=>p&&!/^.+:.+/.test(e)?`${p}:${e}`:e}):u,m=await e(s,{headers:{"Content-Type":"text/xml;charset=UTF-8",...h(l)},body:y,method:f,...i}),A=await m.text();if(!m.ok||!(null===(a=m.headers.get("content-type"))||void 0===a?void 0:a.includes("xml"))||!c)return[{href:m.url,ok:m.ok,status:m.status,statusText:m.statusText,raw:A}];const g=r.xml2js(A,{compact:!0,trim:!0,textFn:(e,t)=>{try{const r=t._parent,a=Object.keys(r),s=a[a.length-1],o=r[s];if(o.length>0){o[o.length-1]=d(e)}else r[s]=d(e)}catch(e){O(e.stack)}},elementNameFn:e=>e.replace(/^.+:/,"").replace(/([-_]\w)/g,(e=>e[1].toUpperCase())),attributesFn:e=>{const t={...e};return delete t.xmlns,t},ignoreDeclaration:!0});return(Array.isArray(g.multistatus.response)?g.multistatus.response:[g.multistatus.response]).map((e=>{var t,r;if(!e)return{status:m.status,statusText:m.statusText,ok:m.ok};const a=/^\S+\s(?<status>\d+)\s(?<statusText>.+)$/.exec(e.status);return{raw:g,href:e.href,status:(null==a?void 0:a.groups)?Number.parseInt(null==a?void 0:a.groups.status,10):m.status,statusText:null!==(r=null===(t=null==a?void 0:a.groups)||void 0===t?void 0:t.statusText)&&void 0!==r?r:m.statusText,ok:!e.error,error:e.error,responsedescription:e.responsedescription,props:(Array.isArray(e.propstat)?e.propstat:[e.propstat]).reduce(((e,t)=>({...e,...null==t?void 0:t.prop})),{})}}))},m=async e=>{const{url:t,props:r,depth:a,headers:o,headersToExclude:c,fetchOptions:d={}}=e;return y({url:t,init:{method:"PROPFIND",headers:f(h({depth:a,...o}),c),namespace:n.DAV,body:{propfind:{_attributes:u([s.CALDAV,s.CALDAV_APPLE,s.CALENDAR_SERVER,s.CARDDAV,s.DAV,s.OWN_CLOUD]),prop:r}}},fetchOptions:d})},A=async t=>{const{url:r,data:a,headers:s,headersToExclude:o,fetchOptions:n={}}=t;return e(r,{method:"PUT",body:a,headers:f(s,o),...n})},g=async t=>{const{url:r,data:a,etag:s,headers:o,headersToExclude:n,fetchOptions:c={}}=t;return e(r,{method:"PUT",body:a,headers:f(h({"If-Match":s,...o}),n),...c})},D=async t=>{const{url:r,headers:a,etag:s,headersToExclude:o,fetchOptions:n={}}=t;return e(r,{method:"DELETE",headers:f(h({"If-Match":s,...a}),o),...n})};var C=Object.freeze({__proto__:null,createObject:A,davRequest:y,deleteObject:D,propfind:m,updateObject:g});function w(e,t){const r=e=>t.every((t=>e[t]));return Array.isArray(e)?e.every((e=>r(e))):r(e)}const b=(e,t)=>t.reduce(((t,r)=>e[r]?t:`${t.length?`${t},`:""}${r.toString()}`),""),V=t("tsdav:collection"),$=async e=>{const{url:t,body:r,depth:a,defaultNamespace:s=n.DAV,headers:o,headersToExclude:c,fetchOptions:d={}}=e,i=await y({url:t,init:{method:"REPORT",headers:f(h({depth:a,...o}),c),namespace:s,body:r},fetchOptions:d});return 1!==i.length||i[0].raw?i:[]},E=async e=>{const{url:t,props:r,depth:a,headers:s,headersToExclude:o,fetchOptions:c={}}=e;return y({url:t,init:{method:"MKCOL",headers:f(h({depth:a,...s}),o),namespace:n.DAV,body:r?{mkcol:{set:{prop:r}}}:void 0},fetchOptions:c})},T=async e=>{var t,r,a,s,o;const{collection:c,headers:d,headersToExclude:i,fetchOptions:l={}}=e;return null!==(o=null===(s=null===(a=null===(r=null===(t=(await m({url:c.url,props:{[`${n.DAV}:supported-report-set`]:{}},depth:"0",headers:f(d,i),fetchOptions:l}))[0])||void 0===t?void 0:t.props)||void 0===r?void 0:r.supportedReportSet)||void 0===a?void 0:a.supportedReport)||void 0===s?void 0:s.map((e=>Object.keys(e.report)[0])))&&void 0!==o?o:[]},k=async e=>{var t,r,a;const{collection:s,headers:o,headersToExclude:c,fetchOptions:d={}}=e,i=(await m({url:s.url,props:{[`${n.CALENDAR_SERVER}:getctag`]:{}},depth:"0",headers:f(o,c),fetchOptions:d})).filter((e=>l(s.url,e.href)))[0];if(!i)throw new Error("Collection does not exist on server");return{isDirty:`${s.ctag}`!=`${null===(t=i.props)||void 0===t?void 0:t.getctag}`,newCtag:null===(a=null===(r=i.props)||void 0===r?void 0:r.getctag)||void 0===a?void 0:a.toString()}},_=e=>{const{url:t,props:r,headers:a,syncLevel:o,syncToken:c,headersToExclude:d,fetchOptions:i}=e;return y({url:t,init:{method:"REPORT",namespace:n.DAV,headers:f({...a},d),body:{"sync-collection":{_attributes:u([s.CALDAV,s.CARDDAV,s.DAV]),"sync-level":o,"sync-token":c,[`${n.DAV}:prop`]:r}}},fetchOptions:i})},U=async e=>{var t,r,a,s,o,c,d,i,u,h,p;const{collection:v,method:O,headers:y,headersToExclude:m,account:A,detailedResult:g,fetchOptions:D={}}=e,C=["accountType","homeUrl"];if(!A||!w(A,C)){if(!A)throw new Error("no account for smartCollectionSync");throw new Error(`account must have ${b(A,C)} before smartCollectionSync`)}const $=null!=O?O:(null===(t=v.reports)||void 0===t?void 0:t.includes("syncCollection"))?"webdav":"basic";if(V(`smart collection sync with type ${A.accountType} and method ${$}`),"webdav"===$){const e=await _({url:v.url,props:{[`${n.DAV}:getetag`]:{},[`${"caldav"===A.accountType?n.CALDAV:n.CARDDAV}:${"caldav"===A.accountType?"calendar-data":"address-data"}`]:{},[`${n.DAV}:displayname`]:{}},syncLevel:1,syncToken:v.syncToken,headers:f(y,m),fetchOptions:D}),t=e.filter((e=>{var t;const r="caldav"===A.accountType?".ics":".vcf";return(null===(t=e.href)||void 0===t?void 0:t.slice(-4))===r})),u=t.filter((e=>404!==e.status)).map((e=>e.href)),h=t.filter((e=>404===e.status)).map((e=>e.href)),p=(u.length&&null!==(a=await(null===(r=null==v?void 0:v.objectMultiGet)||void 0===r?void 0:r.call(v,{url:v.url,props:{[`${n.DAV}:getetag`]:{},[`${"caldav"===A.accountType?n.CALDAV:n.CARDDAV}:${"caldav"===A.accountType?"calendar-data":"address-data"}`]:{}},objectUrls:u,depth:"1",headers:f(y,m),fetchOptions:D})))&&void 0!==a?a:[]).map((e=>{var t,r,a,s,o,n,c,d,i,l;return{url:null!==(t=e.href)&&void 0!==t?t:"",etag:null===(r=e.props)||void 0===r?void 0:r.getetag,data:"caldav"===(null==A?void 0:A.accountType)?null!==(o=null===(s=null===(a=e.props)||void 0===a?void 0:a.calendarData)||void 0===s?void 0:s._cdata)&&void 0!==o?o:null===(n=e.props)||void 0===n?void 0:n.calendarData:null!==(i=null===(d=null===(c=e.props)||void 0===c?void 0:c.addressData)||void 0===d?void 0:d._cdata)&&void 0!==i?i:null===(l=e.props)||void 0===l?void 0:l.addressData}})),O=null!==(s=v.objects)&&void 0!==s?s:[],C=p.filter((e=>O.every((t=>!l(t.url,e.url))))),w=O.reduce(((e,t)=>{const r=p.find((e=>l(e.url,t.url)));return r&&r.etag&&r.etag!==t.etag?[...e,r]:e}),[]),b=h.map((e=>({url:e,etag:""}))),V=O.filter((e=>p.some((t=>l(e.url,t.url)&&t.etag===e.etag))));return{...v,objects:g?{created:C,updated:w,deleted:b}:[...V,...C,...w],syncToken:null!==(i=null===(d=null===(c=null===(o=e[0])||void 0===o?void 0:o.raw)||void 0===c?void 0:c.multistatus)||void 0===d?void 0:d.syncToken)&&void 0!==i?i:v.syncToken}}if("basic"===$){const{isDirty:e,newCtag:t}=await k({collection:v,headers:f(y,m),fetchOptions:D}),r=null!==(u=v.objects)&&void 0!==u?u:[],a=null!==(p=await(null===(h=v.fetchObjects)||void 0===h?void 0:h.call(v,{collection:v,headers:f(y,m),fetchOptions:D})))&&void 0!==p?p:[],s=a.filter((e=>r.every((t=>!l(t.url,e.url))))),o=r.reduce(((e,t)=>{const r=a.find((e=>l(e.url,t.url)));return r&&r.etag&&r.etag!==t.etag?[...e,r]:e}),[]),n=r.filter((e=>a.every((t=>!l(t.url,e.url))))),c=r.filter((e=>a.some((t=>l(e.url,t.url)&&t.etag===e.etag))));if(e)return{...v,objects:g?{created:s,updated:o,deleted:n}:[...c,...s,...o],ctag:t}}return g?{...v,objects:{created:[],updated:[],deleted:[]}}:v};var R=Object.freeze({__proto__:null,collectionQuery:$,isCollectionDirty:k,makeCollection:E,smartCollectionSync:U,supportedReportSet:T,syncCollection:_});const L=t("tsdav:addressBook"),j=async e=>{const{url:t,props:r,filters:a,depth:o,headers:c,headersToExclude:d,fetchOptions:i={}}=e;return $({url:t,body:{"addressbook-query":{_attributes:u([s.CARDDAV,s.DAV]),[`${n.DAV}:prop`]:r,filter:null!=a?a:{"prop-filter":{_attributes:{name:"FN"}}}}},defaultNamespace:n.CARDDAV,depth:o,headers:f(c,d),fetchOptions:i})},S=async e=>{const{url:t,props:r,objectUrls:a,depth:o,headers:c,headersToExclude:d,fetchOptions:i={}}=e;return $({url:t,body:{"addressbook-multiget":{_attributes:u([s.DAV,s.CARDDAV]),[`${n.DAV}:prop`]:r,[`${n.DAV}:href`]:a}},defaultNamespace:n.CARDDAV,depth:o,headers:f(c,d),fetchOptions:i})},x=async e=>{const{account:t,headers:r,props:a,headersToExclude:s,fetchOptions:o={}}=null!=e?e:{},c=["homeUrl","rootUrl"];if(!t||!w(t,c)){if(!t)throw new Error("no account for fetchAddressBooks");throw new Error(`account must have ${b(t,c)} before fetchAddressBooks`)}const d=await m({url:t.homeUrl,props:null!=a?a:{[`${n.DAV}:displayname`]:{},[`${n.CALENDAR_SERVER}:getctag`]:{},[`${n.DAV}:resourcetype`]:{},[`${n.DAV}:sync-token`]:{}},depth:"1",headers:f(r,s),fetchOptions:o});return Promise.all(d.filter((e=>{var t,r;return Object.keys(null!==(r=null===(t=e.props)||void 0===t?void 0:t.resourcetype)&&void 0!==r?r:{}).includes("addressbook")})).map((e=>{var r,a,s,o,n,c,d,i,l;const u=null!==(s=null===(a=null===(r=e.props)||void 0===r?void 0:r.displayname)||void 0===a?void 0:a._cdata)&&void 0!==s?s:null===(o=e.props)||void 0===o?void 0:o.displayname;return L(`Found address book named ${"string"==typeof u?u:""},\n             props: ${JSON.stringify(e.props)}`),{url:new URL(null!==(n=e.href)&&void 0!==n?n:"",null!==(c=t.rootUrl)&&void 0!==c?c:"").href,ctag:null===(d=e.props)||void 0===d?void 0:d.getctag,displayName:"string"==typeof u?u:"",resourcetype:Object.keys(null===(i=e.props)||void 0===i?void 0:i.resourcetype),syncToken:null===(l=e.props)||void 0===l?void 0:l.syncToken}})).map((async e=>({...e,reports:await T({collection:e,headers:f(r,s),fetchOptions:o})}))))},N=async e=>{const{addressBook:t,headers:r,objectUrls:a,headersToExclude:s,urlFilter:o=e=>e,useMultiGet:c=!0,fetchOptions:d={}}=e;L(`Fetching vcards from ${null==t?void 0:t.url}`);const i=["url"];if(!t||!w(t,i)){if(!t)throw new Error("cannot fetchVCards for undefined addressBook");throw new Error(`addressBook must have ${b(t,i)} before fetchVCards`)}const l=(null!=a?a:(await j({url:t.url,props:{[`${n.DAV}:getetag`]:{}},depth:"1",headers:f(r,s),fetchOptions:d})).map((e=>{var t;return e.ok&&null!==(t=e.href)&&void 0!==t?t:""}))).map((e=>e.startsWith("http")||!e?e:new URL(e,t.url).href)).filter(o).map((e=>new URL(e).pathname));let u=[];return l.length>0&&(u=c?await S({url:t.url,props:{[`${n.DAV}:getetag`]:{},[`${n.CARDDAV}:address-data`]:{}},objectUrls:l,depth:"1",headers:f(r,s),fetchOptions:d}):await j({url:t.url,props:{[`${n.DAV}:getetag`]:{},[`${n.CARDDAV}:address-data`]:{}},depth:"1",headers:f(r,s),fetchOptions:d})),u.map((e=>{var r,a,s,o,n,c;return{url:new URL(null!==(r=e.href)&&void 0!==r?r:"",t.url).href,etag:null===(a=e.props)||void 0===a?void 0:a.getetag,data:null!==(n=null===(o=null===(s=e.props)||void 0===s?void 0:s.addressData)||void 0===o?void 0:o._cdata)&&void 0!==n?n:null===(c=e.props)||void 0===c?void 0:c.addressData}}))},P=async e=>{const{addressBook:t,vCardString:r,filename:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e;return A({url:new URL(a,t.url).href,data:r,headers:f({"content-type":"text/vcard; charset=utf-8","If-None-Match":"*",...s},o),fetchOptions:n})},H=async e=>{const{vCard:t,headers:r,headersToExclude:a,fetchOptions:s={}}=e;return g({url:t.url,data:t.data,etag:t.etag,headers:f({"content-type":"text/vcard; charset=utf-8",...r},a),fetchOptions:s})},B=async e=>{const{vCard:t,headers:r,headersToExclude:a,fetchOptions:s={}}=e;return D({url:t.url,etag:t.etag,headers:f(r,a),fetchOptions:s})};var I=Object.freeze({__proto__:null,addressBookMultiGet:S,addressBookQuery:j,createVCard:P,deleteVCard:B,fetchAddressBooks:x,fetchVCards:N,updateVCard:H});const F=t("tsdav:calendar"),M=async e=>{const{url:t,props:r,filters:a,timezone:o,depth:c,headers:d,headersToExclude:i,fetchOptions:l={}}=e;return $({url:t,body:{"calendar-query":h({_attributes:u([s.CALDAV,s.CALENDAR_SERVER,s.CALDAV_APPLE,s.DAV]),[`${n.DAV}:prop`]:r,filter:a,timezone:o})},defaultNamespace:n.CALDAV,depth:c,headers:f(d,i),fetchOptions:l})},z=async e=>{const{url:t,props:r,objectUrls:a,filters:o,timezone:c,depth:d,headers:i,headersToExclude:l,fetchOptions:h={}}=e;return $({url:t,body:{"calendar-multiget":{_attributes:u([s.DAV,s.CALDAV]),[`${n.DAV}:prop`]:r,[`${n.DAV}:href`]:a,...p("filter",o),timezone:c}},defaultNamespace:n.CALDAV,depth:d,headers:f(i,l),fetchOptions:h})},Z=async e=>{const{url:t,props:r,depth:a,headers:o,headersToExclude:c,fetchOptions:d={}}=e;return y({url:t,init:{method:"MKCALENDAR",headers:f(h({depth:a,...o}),c),namespace:n.DAV,body:{[`${n.CALDAV}:mkcalendar`]:{_attributes:u([s.DAV,s.CALDAV,s.CALDAV_APPLE]),set:{prop:r}}}},fetchOptions:d})},G=async e=>{const{headers:t,account:r,props:a,projectedProps:s,headersToExclude:o,fetchOptions:d={}}=null!=e?e:{},i=["homeUrl","rootUrl"];if(!r||!w(r,i)){if(!r)throw new Error("no account for fetchCalendars");throw new Error(`account must have ${b(r,i)} before fetchCalendars`)}const l=await m({url:r.homeUrl,props:null!=a?a:{[`${n.CALDAV}:calendar-description`]:{},[`${n.CALDAV}:calendar-timezone`]:{},[`${n.DAV}:displayname`]:{},[`${n.CALDAV_APPLE}:calendar-color`]:{},[`${n.CALENDAR_SERVER}:getctag`]:{},[`${n.DAV}:resourcetype`]:{},[`${n.CALDAV}:supported-calendar-component-set`]:{},[`${n.DAV}:sync-token`]:{},[`${n.OWN_CLOUD}:calendar-enabled`]:{},[`${n.CALDAV_APPLE}:calendar-order`]:{},[`${n.DAV}:current-user-privilege-set'`]:{}},depth:"1",headers:f(t,o),fetchOptions:d});return Promise.all(l.filter((e=>{var t,r;return Object.keys(null!==(r=null===(t=e.props)||void 0===t?void 0:t.resourcetype)&&void 0!==r?r:{}).includes("calendar")})).filter((e=>{var t,r,a,s;return(Array.isArray(null===(t=e.props)||void 0===t?void 0:t.supportedCalendarComponentSet.comp)?null===(r=e.props)||void 0===r?void 0:r.supportedCalendarComponentSet.comp.map((e=>e._attributes.name)):[null===(s=null===(a=e.props)||void 0===a?void 0:a.supportedCalendarComponentSet.comp)||void 0===s?void 0:s._attributes.name]).some((e=>Object.values(c).includes(e)))})).map((e=>{var t,a,o,n,c,d,i,l,u,h,f,v,O,y,m,A,g,D,C;const w=null===(t=e.props)||void 0===t?void 0:t.calendarDescription,b=null===(a=e.props)||void 0===a?void 0:a.calendarTimezone;return{description:"string"==typeof w?w:"",timezone:"string"==typeof b?b:"",url:new URL(null!==(o=e.href)&&void 0!==o?o:"",null!==(n=r.rootUrl)&&void 0!==n?n:"").href,ctag:null===(c=e.props)||void 0===c?void 0:c.getctag,calendarColor:null===(d=e.props)||void 0===d?void 0:d.calendarColor,displayName:null!==(l=null===(i=e.props)||void 0===i?void 0:i.displayname._cdata)&&void 0!==l?l:null===(u=e.props)||void 0===u?void 0:u.displayname,calendarOrder:null===(h=e.props)||void 0===h?void 0:h.calendarOrder,calendarEnabled:1===(null===(f=e.props)||void 0===f?void 0:f.calendarEnabled),currentUserPrivilegeSet:null===(v=e.props)||void 0===v?void 0:v.currentUserPrivilegeSet,components:Array.isArray(null===(O=e.props)||void 0===O?void 0:O.supportedCalendarComponentSet.comp)?null===(y=e.props)||void 0===y?void 0:y.supportedCalendarComponentSet.comp.map((e=>e._attributes.name)):[null===(A=null===(m=e.props)||void 0===m?void 0:m.supportedCalendarComponentSet.comp)||void 0===A?void 0:A._attributes.name],resourcetype:Object.keys(null===(g=e.props)||void 0===g?void 0:g.resourcetype),syncToken:null===(D=e.props)||void 0===D?void 0:D.syncToken,...p("projectedProps",Object.fromEntries(Object.entries(null!==(C=e.props)&&void 0!==C?C:{}).filter((([e])=>null==s?void 0:s[e]))))}})).map((async e=>({...e,reports:await T({collection:e,headers:f(t,o),fetchOptions:d})}))))},Q=async e=>{const{calendar:t,objectUrls:r,filters:a,timeRange:s,headers:o,expand:c,urlFilter:d=e=>Boolean(null==e?void 0:e.includes(".ics")),useMultiGet:i=!0,headersToExclude:l,fetchOptions:u={}}=e;if(s){const e=/^\d{4}(-\d\d(-\d\d(T\d\d:\d\d(:\d\d)?(\.\d+)?(([+-]\d\d:\d\d)|Z)?)?)?)?$/i,t=/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(\.\d+)?(([+-]\d\d:\d\d)|Z)?$/i;if(!(e.test(s.start)&&e.test(s.end)||t.test(s.start)&&t.test(s.end)))throw new Error("invalid timeRange format, not in ISO8601")}F(`Fetching calendar objects from ${null==t?void 0:t.url}`);const h=["url"];if(!t||!w(t,h)){if(!t)throw new Error("cannot fetchCalendarObjects for undefined calendar");throw new Error(`calendar must have ${b(t,h)} before fetchCalendarObjects`)}const p=null!=a?a:[{"comp-filter":{_attributes:{name:"VCALENDAR"},"comp-filter":{_attributes:{name:"VEVENT"},...s?{"time-range":{_attributes:{start:`${new Date(s.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(s.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}}:{}}}}],v=(null!=r?r:(await M({url:t.url,props:{[`${n.DAV}:getetag`]:{...c&&s?{[`${n.CALDAV}:expand`]:{_attributes:{start:`${new Date(s.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(s.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}}:{}}},filters:p,depth:"1",headers:f(o,l),fetchOptions:u})).map((e=>{var t;return null!==(t=e.href)&&void 0!==t?t:""}))).map((e=>e.startsWith("http")||!e?e:new URL(e,t.url).href)).filter(d).map((e=>new URL(e).pathname));let O=[];return v.length>0&&(O=!i||c?await M({url:t.url,props:{[`${n.DAV}:getetag`]:{},[`${n.CALDAV}:calendar-data`]:{...c&&s?{[`${n.CALDAV}:expand`]:{_attributes:{start:`${new Date(s.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(s.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}}:{}}},filters:p,depth:"1",headers:f(o,l),fetchOptions:u}):await z({url:t.url,props:{[`${n.DAV}:getetag`]:{},[`${n.CALDAV}:calendar-data`]:{...c&&s?{[`${n.CALDAV}:expand`]:{_attributes:{start:`${new Date(s.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(s.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}}:{}}},objectUrls:v,depth:"1",headers:f(o,l),fetchOptions:u})),O.map((e=>{var r,a,s,o,n,c;return{url:new URL(null!==(r=e.href)&&void 0!==r?r:"",t.url).href,etag:`${null===(a=e.props)||void 0===a?void 0:a.getetag}`,data:null!==(n=null===(o=null===(s=e.props)||void 0===s?void 0:s.calendarData)||void 0===o?void 0:o._cdata)&&void 0!==n?n:null===(c=e.props)||void 0===c?void 0:c.calendarData}}))},q=async e=>{const{calendar:t,iCalString:r,filename:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e;return A({url:new URL(a,t.url).href,data:r,headers:f({"content-type":"text/calendar; charset=utf-8","If-None-Match":"*",...s},o),fetchOptions:n})},W=async e=>{const{calendarObject:t,headers:r,headersToExclude:a,fetchOptions:s={}}=e;return g({url:t.url,data:t.data,etag:t.etag,headers:f({"content-type":"text/calendar; charset=utf-8",...r},a),fetchOptions:s})},J=async e=>{const{calendarObject:t,headers:r,headersToExclude:a,fetchOptions:s={}}=e;return D({url:t.url,etag:t.etag,headers:f(r,a),fetchOptions:s})},K=async e=>{var t;const{oldCalendars:r,account:a,detailedResult:s,headers:o,headersToExclude:n,fetchOptions:c={}}=e;if(!a)throw new Error("Must have account before syncCalendars");const d=null!==(t=null!=r?r:a.calendars)&&void 0!==t?t:[],i=await G({account:a,headers:f(o,n),fetchOptions:c}),u=i.filter((e=>d.every((t=>!l(t.url,e.url)))));F(`new calendars: ${u.map((e=>e.displayName))}`);const h=d.reduce(((e,t)=>{const r=i.find((e=>l(e.url,t.url)));return r&&(r.syncToken&&`${r.syncToken}`!=`${t.syncToken}`||r.ctag&&`${r.ctag}`!=`${t.ctag}`)?[...e,r]:e}),[]);F(`updated calendars: ${h.map((e=>e.displayName))}`);const p=await Promise.all(h.map((async e=>await U({collection:{...e,objectMultiGet:z},method:"webdav",headers:f(o,n),account:a,fetchOptions:c})))),v=d.filter((e=>i.every((t=>!l(t.url,e.url)))));F(`deleted calendars: ${v.map((e=>e.displayName))}`);const O=d.filter((e=>i.some((t=>l(t.url,e.url)&&(t.syncToken&&`${t.syncToken}`!=`${e.syncToken}`||t.ctag&&`${t.ctag}`!=`${e.ctag}`)))));return s?{created:u,updated:h,deleted:v}:[...O,...u,...p]},Y=async e=>{const{url:t,timeRange:r,depth:a,headers:o,headersToExclude:c,fetchOptions:d={}}=e;if(!r)throw new Error("timeRange is required");{const e=/^\d{4}(-\d\d(-\d\d(T\d\d:\d\d(:\d\d)?(\.\d+)?(([+-]\d\d:\d\d)|Z)?)?)?)?$/i,t=/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(\.\d+)?(([+-]\d\d:\d\d)|Z)?$/i;if(!(e.test(r.start)&&e.test(r.end)||t.test(r.start)&&t.test(r.end)))throw new Error("invalid timeRange format, not in ISO8601")}return(await $({url:t,body:{"free-busy-query":h({_attributes:u([s.CALDAV]),[`${n.CALDAV}:time-range`]:{_attributes:{start:`${new Date(r.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(r.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}})},defaultNamespace:n.CALDAV,depth:a,headers:f(o,c),fetchOptions:d}))[0]};var X=Object.freeze({__proto__:null,calendarMultiGet:z,calendarQuery:M,createCalendarObject:q,deleteCalendarObject:J,fetchCalendarObjects:Q,fetchCalendars:G,freeBusyQuery:Y,makeCalendar:Z,syncCalendars:K,updateCalendarObject:W});const ee=t("tsdav:account"),te=async t=>{var r,a;ee("Service discovery...");const{account:s,headers:o,headersToExclude:n,fetchOptions:c={}}=t,d=new URL(s.serverUrl),i=new URL(`/.well-known/${s.accountType}`,d);i.protocol=null!==(r=d.protocol)&&void 0!==r?r:"http";try{const t=await e(i.href,{headers:f(o,n),method:"PROPFIND",redirect:"manual",...c});if(t.status>=300&&t.status<400){const e=t.headers.get("Location");if("string"==typeof e&&e.length){ee(`Service discovery redirected to ${e}`);const t=new URL(e,d);return t.hostname===i.hostname&&i.port&&!t.port&&(t.port=i.port),t.protocol=null!==(a=d.protocol)&&void 0!==a?a:"http",t.href}}}catch(e){ee(`Service discovery failed: ${e.stack}`)}return d.href},re=async e=>{var t,r,a,s,o;const{account:c,headers:d,headersToExclude:i,fetchOptions:l={}}=e,u=["rootUrl"];if(!w(c,u))throw new Error(`account must have ${b(c,u)} before fetchPrincipalUrl`);ee(`Fetching principal url from path ${c.rootUrl}`);const[h]=await m({url:c.rootUrl,props:{[`${n.DAV}:current-user-principal`]:{}},depth:"0",headers:f(d,i),fetchOptions:l});if(!h.ok&&(ee(`Fetch principal url failed: ${h.statusText}`),401===h.status))throw new Error("Invalid credentials");return ee(`Fetched principal url ${null===(r=null===(t=h.props)||void 0===t?void 0:t.currentUserPrincipal)||void 0===r?void 0:r.href}`),new URL(null!==(o=null===(s=null===(a=h.props)||void 0===a?void 0:a.currentUserPrincipal)||void 0===s?void 0:s.href)&&void 0!==o?o:"",c.rootUrl).href},ae=async e=>{var t,r;const{account:a,headers:s,headersToExclude:o,fetchOptions:c={}}=e,d=["principalUrl","rootUrl"];if(!w(a,d))throw new Error(`account must have ${b(a,d)} before fetchHomeUrl`);ee(`Fetch home url from ${a.principalUrl}`);const i=(await m({url:a.principalUrl,props:"caldav"===a.accountType?{[`${n.CALDAV}:calendar-home-set`]:{}}:{[`${n.CARDDAV}:addressbook-home-set`]:{}},depth:"0",headers:f(s,o),fetchOptions:c})).find((e=>l(a.principalUrl,e.href)));if(!i||!i.ok)throw new Error("cannot find homeUrl");const u=new URL("caldav"===a.accountType?null===(t=null==i?void 0:i.props)||void 0===t?void 0:t.calendarHomeSet.href:null===(r=null==i?void 0:i.props)||void 0===r?void 0:r.addressbookHomeSet.href,a.rootUrl).href;return ee(`Fetched home url ${u}`),u},se=async e=>{const{account:t,headers:r,loadCollections:a=!1,loadObjects:s=!1,headersToExclude:o,fetchOptions:n={}}=e,c={...t};return c.rootUrl=await te({account:t,headers:f(r,o),fetchOptions:n}),c.principalUrl=await re({account:c,headers:f(r,o),fetchOptions:n}),c.homeUrl=await ae({account:c,headers:f(r,o),fetchOptions:n}),(a||s)&&("caldav"===t.accountType?c.calendars=await G({headers:f(r,o),account:c,fetchOptions:n}):"carddav"===t.accountType&&(c.addressBooks=await x({headers:f(r,o),account:c,fetchOptions:n}))),s&&("caldav"===t.accountType&&c.calendars?c.calendars=await Promise.all(c.calendars.map((async e=>({...e,objects:await Q({calendar:e,headers:f(r,o),fetchOptions:n})})))):"carddav"===t.accountType&&c.addressBooks&&(c.addressBooks=await Promise.all(c.addressBooks.map((async e=>({...e,objects:await N({addressBook:e,headers:f(r,o),fetchOptions:n})})))))),c};var oe=Object.freeze({__proto__:null,createAccount:se,fetchHomeUrl:ae,fetchPrincipalUrl:re,serviceDiscovery:te});const ne=t("tsdav:authHelper"),ce=(e,t)=>(...r)=>e({...t,...r[0]}),de=e=>(ne(`Basic auth token generated: ${a(`${e.username}:${e.password}`)}`),{authorization:`Basic ${a(`${e.username}:${e.password}`)}`}),ie=async(t,r)=>{const a=["authorizationCode","redirectUrl","clientId","clientSecret","tokenUrl"];if(!w(t,a))throw new Error(`Oauth credentials missing: ${b(t,a)}`);const s=new URLSearchParams({grant_type:"authorization_code",code:t.authorizationCode,redirect_uri:t.redirectUrl,client_id:t.clientId,client_secret:t.clientSecret});ne(t.tokenUrl),ne(s.toString());const o=await e(t.tokenUrl,{method:"POST",body:s.toString(),headers:{"content-length":`${s.toString().length}`,"content-type":"application/x-www-form-urlencoded"},...null!=r?r:{}});if(o.ok){return await o.json()}return ne(`Fetch Oauth tokens failed: ${await o.text()}`),{}},le=async(t,r)=>{const a=["refreshToken","clientId","clientSecret","tokenUrl"];if(!w(t,a))throw new Error(`Oauth credentials missing: ${b(t,a)}`);const s=new URLSearchParams({client_id:t.clientId,client_secret:t.clientSecret,refresh_token:t.refreshToken,grant_type:"refresh_token"}),o=await e(t.tokenUrl,{method:"POST",body:s.toString(),headers:{"Content-Type":"application/x-www-form-urlencoded"},...null!=r?r:{}});if(o.ok){return await o.json()}return ne(`Refresh access token failed: ${await o.text()}`),{}},ue=async(e,t)=>{var r;ne("Fetching oauth headers");let a={};return e.refreshToken?(e.refreshToken&&!e.accessToken||Date.now()>(null!==(r=e.expiration)&&void 0!==r?r:0))&&(a=await le(e,t)):a=await ie(e,t),ne(`Oauth tokens fetched: ${a.access_token}`),{tokens:a,headers:{authorization:`Bearer ${a.access_token}`}}};var he=Object.freeze({__proto__:null,defaultParam:ce,fetchOauthTokens:ie,getBasicAuthHeaders:de,getOauthHeaders:ue,refreshAccessToken:le});const pe=async e=>{var t;const{serverUrl:r,credentials:a,authMethod:s,defaultAccountType:o,authFunction:n}=e;let c={};switch(s){case"Basic":c=de(a);break;case"Oauth":c=(await ue(a)).headers;break;case"Digest":c={Authorization:`Digest ${a.digestString}`};break;case"Custom":c=null!==(t=await(null==n?void 0:n(a)))&&void 0!==t?t:{};break;default:throw new Error("Invalid auth method")}const d=o?await se({account:{serverUrl:r,credentials:a,accountType:o},headers:c}):void 0,i=ce(A,{url:r,headers:c}),l=ce(g,{headers:c,url:r}),u=ce(D,{headers:c,url:r}),h=ce(m,{headers:c}),p=ce($,{headers:c}),f=ce(E,{headers:c}),v=ce(_,{headers:c}),O=ce(T,{headers:c}),C=ce(k,{headers:c}),w=ce(U,{headers:c,account:d}),b=ce(M,{headers:c}),V=ce(z,{headers:c}),R=ce(Z,{headers:c}),L=ce(G,{headers:c,account:d}),I=ce(Q,{headers:c}),F=ce(q,{headers:c}),Y=ce(W,{headers:c}),X=ce(J,{headers:c}),ee=ce(K,{account:d,headers:c}),te=ce(j,{headers:c}),re=ce(S,{headers:c});return{davRequest:async e=>{const{init:t,...r}=e,{headers:a,...s}=t;return y({...r,init:{...s,headers:{...c,...a}}})},propfind:h,createAccount:async e=>{const{account:t,headers:s,loadCollections:o,loadObjects:n}=e;return se({account:{serverUrl:r,credentials:a,...t},headers:{...c,...s},loadCollections:o,loadObjects:n})},createObject:i,updateObject:l,deleteObject:u,calendarQuery:b,addressBookQuery:te,collectionQuery:p,makeCollection:f,calendarMultiGet:V,makeCalendar:R,syncCollection:v,supportedReportSet:O,isCollectionDirty:C,smartCollectionSync:w,fetchCalendars:L,fetchCalendarObjects:I,createCalendarObject:F,updateCalendarObject:Y,deleteCalendarObject:X,syncCalendars:ee,fetchAddressBooks:ce(x,{account:d,headers:c}),addressBookMultiGet:re,fetchVCards:ce(N,{headers:c}),createVCard:ce(P,{headers:c}),updateVCard:ce(H,{headers:c}),deleteVCard:ce(B,{headers:c})}};class fe{constructor(e){var t,r,a;this.serverUrl=e.serverUrl,this.credentials=e.credentials,this.authMethod=null!==(t=e.authMethod)&&void 0!==t?t:"Basic",this.accountType=null!==(r=e.defaultAccountType)&&void 0!==r?r:"caldav",this.authFunction=e.authFunction,this.fetchOptions=null!==(a=e.fetchOptions)&&void 0!==a?a:{}}async login(){var e;switch(this.authMethod){case"Basic":this.authHeaders=de(this.credentials);break;case"Oauth":this.authHeaders=(await ue(this.credentials,this.fetchOptions)).headers;break;case"Digest":this.authHeaders={Authorization:`Digest ${this.credentials.digestString}`};break;case"Custom":this.authHeaders=await(null===(e=this.authFunction)||void 0===e?void 0:e.call(this,this.credentials));break;default:throw new Error("Invalid auth method")}this.account=this.accountType?await se({account:{serverUrl:this.serverUrl,credentials:this.credentials,accountType:this.accountType},headers:this.authHeaders,fetchOptions:this.fetchOptions}):void 0}async davRequest(e){const{init:t,...r}=e,{headers:a,...s}=t;return y({...r,init:{...s,headers:{...this.authHeaders,...a}},fetchOptions:this.fetchOptions})}async createObject(...e){return ce(A,{url:this.serverUrl,headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async updateObject(...e){return ce(g,{url:this.serverUrl,headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async deleteObject(...e){return ce(D,{url:this.serverUrl,headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async propfind(...e){return ce(m,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async createAccount(e){const{account:t,headers:r,loadCollections:a,loadObjects:s,fetchOptions:o}=e;return se({account:{serverUrl:this.serverUrl,credentials:this.credentials,...t},headers:{...this.authHeaders,...r},loadCollections:a,loadObjects:s,fetchOptions:null!=o?o:this.fetchOptions})}async collectionQuery(...e){return ce($,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async makeCollection(...e){return ce(E,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async syncCollection(...e){return ce(_,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async supportedReportSet(...e){return ce(T,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async isCollectionDirty(...e){return ce(k,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async smartCollectionSync(...e){return ce(U,{headers:this.authHeaders,fetchOptions:this.fetchOptions,account:this.account})(e[0])}async calendarQuery(...e){return ce(M,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async makeCalendar(...e){return ce(Z,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async calendarMultiGet(...e){return ce(z,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async fetchCalendars(...e){return ce(G,{headers:this.authHeaders,account:this.account,fetchOptions:this.fetchOptions})(null==e?void 0:e[0])}async fetchCalendarObjects(...e){return ce(Q,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async createCalendarObject(...e){return ce(q,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async updateCalendarObject(...e){return ce(W,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async deleteCalendarObject(...e){return ce(J,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async syncCalendars(...e){return ce(K,{headers:this.authHeaders,account:this.account,fetchOptions:this.fetchOptions})(e[0])}async addressBookQuery(...e){return ce(j,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async addressBookMultiGet(...e){return ce(S,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async fetchAddressBooks(...e){return ce(x,{headers:this.authHeaders,account:this.account,fetchOptions:this.fetchOptions})(null==e?void 0:e[0])}async fetchVCards(...e){return ce(N,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async createVCard(...e){return ce(P,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async updateVCard(...e){return ce(H,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async deleteVCard(...e){return ce(B,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}}var ve={DAVNamespace:s,DAVNamespaceShort:n,DAVAttributeMap:o,...Object.freeze({__proto__:null,DAVClient:fe,createDAVClient:pe}),...C,...R,...oe,...I,...X,...he,...v};export{o as DAVAttributeMap,fe as DAVClient,s as DAVNamespace,n as DAVNamespaceShort,j as addressBookQuery,z as calendarMultiGet,M as calendarQuery,h as cleanupFalsy,$ as collectionQuery,se as createAccount,q as createCalendarObject,pe as createDAVClient,A as createObject,P as createVCard,y as davRequest,ve as default,J as deleteCalendarObject,D as deleteObject,B as deleteVCard,x as fetchAddressBooks,Q as fetchCalendarObjects,G as fetchCalendars,ie as fetchOauthTokens,N as fetchVCards,Y as freeBusyQuery,de as getBasicAuthHeaders,u as getDAVAttribute,ue as getOauthHeaders,k as isCollectionDirty,Z as makeCalendar,m as propfind,le as refreshAccessToken,U as smartCollectionSync,T as supportedReportSet,K as syncCalendars,_ as syncCollection,W as updateCalendarObject,g as updateObject,H as updateVCard,l as urlContains,i as urlEquals};
